# import numpy as np
# import matplotlib.pyplot as plt

# mic_type = "Podcast"
# envi = "Noisy"
# volume_level = "100"

# db_values = [
#     54.1, 53.68, 54.17, 52.64, 52.33, 52.09, 54.18, 55.07, 54.39, 54.13, 53.97, 52.45, 53.82, 54.41, 53.3, 54.65, 55.19, 53.82, 53.6, 55.51, 53.43, 53.17, 55.58, 54.77, 52.36, 55.23, 54.81, 55.04, 52.25, 54.7, 55.14, 54.07, 54.24, 54.33, 53.19, 53.61, 54.31, 55.01, 53.29, 52.85, 52.98, 53.21, 53.11, 52.05, 53.47, 53.11, 53.27, 54.03, 55.63, 53.81, 54.23, 52.42, 55.66, 55.14, 53.1, 53.09, 54.21, 54.84, 52.6, 53.87, 55.38, 54.38, 54.6, 52.77, 52.58, 53.52, 52.82, 53.59, 53.16, 54.0, 53.84, 55.25, 54.17, 54.64, 55.03, 55.18, 53.69, 54.0, 55.14, 53.43, 55.3, 53.66, 53.7, 52.54, 53.13, 53.21, 54.01, 54.75, 55.34, 54.0, 54.56, 55.58, 54.4, 54.36, 54.94, 53.83, 53.36, 55.2, 55.27, 52.9, 53.33, 53.49, 55.63, 53.37, 53.99, 52.51, 53.86, 53.22, 52.93, 55.03, 52.16, 54.71, 53.69, 54.6, 53.31, 53.91, 53.94, 54.37, 54.91, 54.37, 55.46, 52.83, 54.39, 54.41, 53.61, 54.46, 52.75, 53.54, 54.83, 52.99, 52.24, 54.95, 53.95, 54.6, 53.41, 52.09, 52.14, 53.02, 54.21, 55.27, 53.53, 54.53, 54.08, 54.44, 54.12, 53.94, 52.42, 55.22, 54.87, 54.35, 54.51, 53.48, 52.12, 55.22, 54.68, 52.1, 52.02, 54.0, 54.06, 53.89, 53.06, 52.62, 54.43, 55.03, 53.79, 52.1, 54.72, 55.41, 53.09, 54.67, 54.81, 52.5, 53.56, 53.98, 53.36, 52.34, 54.52, 55.55, 54.5, 54.85, 52.84, 52.75, 52.06, 54.59, 53.37, 53.72, 53.11, 53.93, 53.18, 53.51, 54.37, 54.61, 54.11, 54.48, 54.17, 55.67, 55.05, 53.75, 53.15, 54.47, 54.21, 53.59, 54.67, 54.3, 55.04, 53.86, 54.78, 54.98, 54.31, 55.25, 52.48, 54.47, 55.51, 52.86, 53.74, 52.32, 55.45, 54.21, 53.24, 54.58, 55.37, 52.48, 53.88, 54.46, 54.6, 52.05, 52.3, 52.07, 54.72, 53.84, 54.05, 53.95, 53.55, 54.96, 53.83, 53.69, 55.11, 53.48, 53.35, 55.05, 52.65, 52.48, 53.83, 54.17, 52.01, 53.47, 53.35, 53.0, 55.05, 55.5, 54.51, 53.02, 53.21, 54.3, 54.6, 52.63, 52.51, 54.66, 55.02, 54.0, 54.9, 52.18, 55.17, 53.5, 54.68, 52.98, 55.53, 54.38, 53.56, 53.83, 54.78, 54.48, 53.33, 55.39, 53.96, 53.16, 54.72, 54.1, 54.44, 55.32, 55.22, 54.11, 54.4, 53.35, 54.24, 53.94, 52.35, 53.37, 55.25, 55.19, 53.74, 53.09, 52.32, 52.79, 53.58, 53.91, 53.67, 53.56, 54.17, 55.66,

#     61.62, 61.74, 61.28, 60.76, 60.84, 60.9, 64.29, 60.22, 60.21, 64.98, 61.98, 60.91, 61.64, 64.45, 62.82, 61.01, 60.29, 60.12, 61.55, 60.03, 64.47, 60.49, 64.33, 64.81, 61.79, 60.58, 61.37, 64.47, 60.82, 60.59, 62.97, 62.9, 60.38, 60.39, 60.33, 62.41, 60.98, 61.11, 61.75, 60.16, 61.91, 61.82, 61.68, 64.8, 61.06, 64.6, 61.72, 64.59, 61.5, 61.32, 62.73, 60.49, 61.45, 64.63, 60.22, 64.98, 64.95, 62.75, 61.72, 61.14, 61.99, 62.71, 64.13, 60.0, 60.1, 61.93, 60.29, 64.57, 61.88, 64.63, 60.12, 60.74, 60.08, 60.27, 61.71, 60.12, 60.35, 62.79, 61.98, 62.26, 64.92, 64.65, 60.11, 60.04, 60.22, 61.88, 61.0, 60.03, 60.89, 62.73, 64.5, 61.28, 61.11, 64.73, 60.52, 60.27, 61.6, 62.76, 61.52, 64.0, 60.73, 61.75, 61.55, 60.27, 60.15, 62.95, 61.2, 62.86, 62.81, 60.55, 60.65, 64.14, 60.24, 61.29, 61.48, 60.67, 64.65, 60.29, 61.01, 61.96, 60.5, 61.08, 61.51, 64.11, 64.94, 61.34, 61.16, 60.88, 62.47, 61.19, 60.4, 61.6, 60.09, 61.88, 61.79, 61.08, 60.24, 60.82, 64.4, 64.7, 61.1, 64.47, 60.5, 60.14, 64.03, 60.81, 60.53, 62.94, 61.71, 61.73, 62.71, 61.67, 60.04, 64.64, 62.79, 64.14, 64.6, 61.12, 61.85, 61.6, 60.4, 61.86, 61.4, 60.07, 60.36, 61.73, 62.06, 60.43, 64.72, 61.66, 62.91, 60.06, 64.37, 61.61, 61.05, 62.73, 61.67, 61.07, 64.64, 61.47, 64.66, 60.09, 60.68, 60.52, 60.59, 61.65, 60.56, 60.8, 61.25, 61.93, 61.81, 61.33, 61.92, 60.34, 61.26, 60.78, 62.76, 61.43, 64.98, 60.99, 64.81, 61.38, 62.95, 60.85, 61.4, 61.73, 60.55, 60.19, 61.32, 61.8, 61.22, 61.66, 60.38, 64.15, 62.77, 61.27, 60.15, 62.02, 61.08, 60.22, 60.27, 64.3, 60.98, 61.28, 64.18, 61.35, 60.36, 61.92, 61.75, 61.06, 61.89, 61.8, 60.11, 61.91, 61.69, 61.97, 61.8, 64.65, 64.25, 61.44, 64.71, 60.72, 60.74, 60.63, 61.92, 60.8, 61.98, 60.33, 61.81, 60.44, 64.63, 61.8, 60.08, 60.72, 64.56, 61.26, 64.81, 62.52, 60.31, 60.36, 61.72, 61.68, 60.24, 60.82, 62.16, 62.18, 60.6, 62.22, 61.93, 61.17, 60.06, 64.68, 61.34, 61.15, 60.17, 62.61, 64.65, 64.42, 61.03, 61.41, 61.88, 61.94, 60.67, 60.55, 64.18, 61.9, 60.42, 61.66, 61.65, 64.96, 61.37, 61.98, 61.69, 61.28, 64.02, 60.21, 61.16, 60.88, 60.47, 62.96,

#     68.95, 69.6, 69.83, 70.88, 70.1, 71.9, 71.22, 70.57, 69.06, 71.33, 70.13, 71.24, 70.86, 71.84, 72.16, 72.01, 69.31, 72.35, 72.0, 70.85, 70.34, 71.82, 70.23, 70.63, 71.65, 69.44, 70.11, 69.37, 70.31, 70.59, 69.23, 70.73, 71.14, 71.71, 71.65, 71.78, 71.67, 70.5, 68.84, 71.8, 70.21, 71.23, 71.16, 70.67, 71.04, 70.71, 69.9, 69.9, 70.57, 72.17, 71.37, 70.86, 69.66, 70.52, 72.06, 72.29, 69.45, 70.76, 70.67, 71.37, 71.97, 70.96, 70.51, 71.95, 69.54, 70.41, 69.13, 70.79, 71.11, 71.92, 72.06, 70.17, 68.9, 72.36, 72.43, 71.74, 71.14, 69.76, 71.66, 71.29, 69.27, 69.87, 70.64, 71.46, 71.17, 72.26, 70.37, 70.42, 69.44, 71.22, 70.68, 71.68, 71.92, 72.04, 71.9, 71.07, 69.15, 71.77, 71.1, 72.01, 71.77, 70.78, 71.97, 71.0, 71.97, 71.35, 70.44, 69.84, 71.79, 70.37, 69.5, 72.25, 72.05, 71.48, 71.19, 69.75, 72.14, 71.45, 71.23, 72.16, 72.06, 71.56, 70.16, 72.18, 71.79, 70.07, 69.34, 70.04, 70.45, 72.2, 71.7, 72.01, 72.39, 70.25, 69.72, 71.7, 72.21, 70.23, 69.82, 69.29, 70.22, 70.66, 71.04, 71.5, 71.5, 70.18, 68.96, 72.35, 71.16, 71.04, 69.77, 71.55, 71.75, 70.98, 71.47, 71.92, 71.15, 71.44, 71.3, 69.91, 69.97, 70.63, 71.44, 70.14, 72.13, 69.48, 70.04, 70.3, 71.14, 70.92, 72.05, 71.92, 72.24, 68.89, 69.73, 71.88, 72.36, 71.9, 71.93, 70.06, 71.71, 71.24, 70.78, 70.73, 70.44, 70.34, 72.26, 71.59, 70.11, 69.26, 67.41, 71.65, 69.89, 71.09, 72.14, 72.2, 71.66, 71.92, 71.03, 71.52, 70.83, 71.41, 71.44, 70.84, 72.46, 71.21, 70.33, 69.62, 70.91, 70.8, 71.62, 71.91, 72.16, 71.02, 68.9, 67.49, 70.66, 70.44, 71.86, 69.35, 69.94, 69.57, 72.09, 72.22, 70.89, 69.45, 72.06, 70.56, 71.36, 71.15, 72.38, 71.01, 71.42, 70.48, 71.43, 71.17, 71.24, 71.47, 71.22, 70.71, 71.51, 72.4, 70.54, 70.24, 69.31, 69.53, 71.23, 71.14, 70.8, 69.56, 70.62, 70.91, 71.11, 71.19, 72.07, 71.75, 71.52, 68.38, 72.41, 71.36, 70.13, 71.03, 72.01, 70.45, 71.32, 71.98, 69.64, 70.95, 69.76, 72.05, 71.73, 71.23, 70.0, 70.13, 71.93, 71.21, 72.41, 71.01, 72.39, 71.44, 71.24, 68.94, 71.43, 71.14, 70.33, 71.35, 70.47, 72.12, 69.72, 70.34, 69.47, 71.8, 70.93, 71.49, 71.11, 72.04, 71.14, 71.21, 71.08, 72.02,

#     75.85, 75.61, 74.99, 75.3, 75.85, 75.63, 75.3, 75.47, 74.61, 74.94, 75.0, 76.01, 75.31, 74.68, 75.32, 75.26, 73.76, 74.65, 74.36, 75.74, 74.16, 74.41, 73.96, 75.73, 74.84, 74.45, 74.78, 75.72, 75.31, 75.19, 75.98, 74.12, 73.97, 73.9, 73.85, 75.03, 75.13, 75.64, 74.72, 75.89, 75.52, 74.87, 75.41, 75.63, 74.42, 75.25, 75.87, 74.13, 75.26, 74.97, 76.31, 73.88, 74.87, 73.6, 75.59, 73.84, 74.32, 75.46, 74.46, 75.3, 73.96, 74.06, 74.55, 74.65, 75.62, 75.04, 75.23, 75.98, 74.13, 73.46, 76.15, 75.61, 75.01, 75.53, 74.98, 75.2, 75.06, 75.28, 75.56, 75.63, 74.19, 74.73, 75.95, 74.76, 74.07, 74.09, 74.57, 74.37, 76.23, 75.78, 74.77, 74.81, 75.63, 74.0, 73.96, 74.18, 75.48, 74.48, 75.95, 75.56, 75.39, 76.03, 74.57, 73.02, 75.72, 76.19, 74.62, 75.54, 74.59, 75.42, 75.66, 74.43, 75.07, 75.63, 74.88, 75.13, 74.51, 76.91, 73.7, 74.19, 74.18, 75.37, 74.83, 74.9, 75.03, 75.72, 74.56, 76.09, 75.59, 75.48, 75.95, 73.96, 74.91, 75.15, 75.43, 76.24, 74.75, 74.45, 75.03, 76.13, 74.53, 74.03, 75.83, 74.67, 75.89, 74.29, 74.2, 75.54, 74.16, 75.51, 75.45, 75.83, 76.03, 74.18, 75.95, 75.47, 74.98, 75.7, 75.27, 75.15, 74.78, 74.64, 76.58, 74.51, 74.69, 74.62, 76.01, 74.48, 74.23, 74.25, 74.36, 74.62, 75.44, 75.2, 75.27, 75.21, 74.7, 75.49, 76.04, 75.42, 75.24, 75.45, 75.19, 74.12, 74.62, 74.84, 75.34, 75.51, 75.06, 75.37, 75.72, 73.08, 74.45, 75.56, 75.7, 74.35, 75.02, 74.92, 75.75, 74.64, 75.59, 75.95, 75.55, 76.26, 75.39, 74.92, 74.56, 76.73, 75.27, 75.25, 74.32, 75.87, 73.56, 75.08, 74.34, 76.02, 74.65, 74.31, 74.15, 75.93, 74.27, 75.12, 74.86, 75.78, 75.44, 75.85, 75.6, 76.28, 74.38, 74.19, 74.56, 74.28, 75.58, 75.03, 75.58, 74.75, 75.78, 75.2, 74.77, 76.66, 74.89, 75.22, 75.19, 76.35, 75.64, 73.8, 75.32, 76.11, 74.61, 74.09, 75.76, 74.93, 74.51, 74.61, 75.81, 75.42, 75.67, 74.8, 76.29, 73.67, 74.44, 73.85, 75.48, 74.81, 75.67, 75.45, 76.12, 75.12, 75.02, 76.59, 75.06, 74.9, 75.74, 75.61, 75.24, 73.99, 75.77, 77.05, 74.43, 74.77, 73.72, 75.37, 73.45, 76.56, 74.63, 74.94, 74.21, 75.98, 74.33, 73.97, 74.09, 74.99, 74.96, 75.37, 75.08, 75.41, 75.18, 74.97, 75.42, 75.52,

#     80.23, 80.0, 79.01, 79.67, 79.49, 80.24, 78.86, 80.09, 80.29, 79.68, 79.92, 79.23, 79.21, 79.81, 79.53, 79.79, 79.89, 79.78, 79.22, 79.22, 79.79, 79.74, 80.02, 78.89, 79.37, 80.09, 80.14, 79.5, 80.54, 79.99, 80.19, 79.14, 79.84, 79.37, 79.02, 79.76, 79.57, 79.69, 79.9, 79.97, 79.3, 79.78, 79.53, 79.85, 79.69, 79.44, 80.38, 79.38, 79.64, 79.81, 81.0, 80.11, 80.05, 80.05, 79.22, 80.44, 79.52, 79.13, 79.19, 79.44, 79.12, 79.94, 79.59, 79.41, 79.96, 80.27, 79.57, 79.3, 79.61, 78.86, 78.94, 80.47, 79.53, 78.78, 79.54, 79.57, 79.9, 79.11, 79.97, 79.49, 79.52, 78.75, 79.42, 79.75, 79.66, 80.14, 78.69, 78.85, 79.87, 79.69, 79.59, 78.76, 80.53, 79.0, 79.33, 80.29, 79.73, 80.02, 80.06, 78.71, 80.76, 79.03, 79.82, 79.77, 78.98, 79.75, 79.75, 79.79, 79.71, 79.99, 79.18, 78.67, 79.95, 79.04, 79.61, 78.79, 80.14, 79.69, 80.05, 78.93, 79.67, 80.01, 79.9, 79.3, 80.48, 79.15, 79.97, 79.69, 80.71, 80.52, 79.53, 80.22, 79.69, 79.29, 79.63, 80.18, 78.67, 79.51, 80.58, 79.68, 79.87, 79.51, 79.58, 79.02, 79.77, 79.75, 80.01, 80.3, 79.03, 79.18, 79.72, 78.94, 78.89, 79.78, 80.03, 79.26, 79.72, 80.65, 80.96, 80.09, 78.99, 79.73, 79.91, 79.69, 79.56, 78.92, 79.57, 80.33, 79.45, 80.59, 80.25, 79.19, 80.22, 79.52, 79.5, 80.16, 80.74, 79.11, 79.44, 80.44, 80.52, 78.78, 79.6, 80.44, 79.56, 79.68, 79.36, 80.71, 79.81, 79.42, 79.22, 79.32, 80.04, 79.64, 80.02, 79.46, 79.11, 79.07, 79.74, 80.25, 80.11, 80.38, 79.94, 79.91, 78.8, 79.32, 80.19, 79.79, 79.76, 80.47, 79.23, 80.08, 79.42, 78.93, 79.98, 79.78, 80.43, 79.37, 78.96, 79.74, 79.54, 79.91, 80.17, 81.12, 79.38, 80.02, 79.43, 80.9, 79.99, 79.84, 80.14, 78.92, 79.64, 79.93, 80.14, 78.75, 79.26, 79.38, 79.7, 78.96, 79.02, 79.47, 79.56, 79.79, 80.61, 79.26, 79.24, 79.1, 80.17, 78.89, 79.58, 79.78, 79.81, 79.66, 80.24, 79.78, 80.15, 79.88, 79.33, 79.87, 79.06, 79.62, 79.72, 80.52, 79.07, 79.87, 78.78, 79.81, 80.61, 79.31, 79.44, 78.81, 79.63, 79.21, 79.19, 79.05, 79.61, 78.9, 79.51, 79.95, 80.09, 79.93, 79.57, 79.65, 79.51, 80.13, 79.88, 79.74, 79.41, 78.96, 80.7, 79.15, 80.32, 79.43, 80.62, 80.19, 79.32, 79.33, 80.18, 78.76
# ]

# # noisy built-in
# # 20%

# # 100
# wer_values = [14.702154626109, 17.61723700887199, 19.39163498098859, 21.926489226869457, 24.714828897338403]


# ### Built-in
# # wer_values = [4, 7, 8, 11, 14]
# # wer_values = [5.88, 7.23, 14.28, 16.67, 18.81]
# # 1+3/37 = 4/37 = 0.10810811 * 100% = 10.81
# # 7/42 = 0.16667
# # 8/56 = 0.1428
# # 6/83 = 0.0722
# # 5//85 = 0.0588

# ### Podcast
# # wer_values = [11, 17, 23]
# # wer_values = [9, 11, 14, 17, 23]
# # wer_values = [10.34, 13.09, 19.44, 25.00, 33.82]
# # 9/87 = 0.1034
# # 11/84 = 0.1309
# # 14/72 = 0.1944
# # 17/68 = 0.25
# # 23/65 = 0.3538

# ### Meeting
# # wer_values = [3, 7, 13]
# # wer_values = [3, 6, 7, 10, 13]
# # wer_values = [3.29, 6.81, 9.09, 14.49, 22.03]
# # 3/91 = 0.0329
# # 6/88 = 0.0681
# # 7/77 = 0.0909
# # 10/69 = 0.1449
# # 13/59 = 0.2203

# ### TWS
# # wer_values = [6, 8, 13]
# # wer_values = [6, 7, 8, 11, 13]
# # wer_values = [7.14, 9.21, 10.95, 15.71, 20.31]
# # 6/84 = 0.0714
# # 7/76 = 0.0921
# # 8/73 = 0.1095
# # 11/70 = 0.1571
# # 13/64 = 0.2031


# # # Interpolating wer_values to match the length of db_values
# # time_points = [0, len(wer_values) - 1]  # Time points for the original wer_values
# # wer_extended = np.interp(range(len(db_values)), np.linspace(0, len(db_values) - 1, len(wer_values)), wer_values)

# # Extend wer_values to match the length of db_values
# wer_extended = []
# for value in wer_values:
#     wer_extended.extend([value] * (len(db_values) // len(wer_values)))  # Repeat each value for the length of db_values

# # # If db_values is not a multiple of the length of wer_values, we can fill the remaining with the last value
# # remaining = len(db_values) % len(wer_values)
# # wer_extended.extend([wer_values[-1]] * remaining)


# time_values = list(range(len(db_values)))  # x-axis in seconds
# plt.figure(figsize=(10, 6))
# # plt.plot(time_values, db_values, marker='o', linestyle='-', color='b', label='dB Levels')
# plt.plot(time_values, wer_extended, marker='x', linestyle='--', color='r', label='WER Values')

# # Adding titles and labels
# plt.title(f'WER - Noisy - {mic_type} Mic - {envi} - Level {volume_level}%')
# plt.xlabel('Time (seconds)')
# plt.ylabel('WER in %')
# plt.legend()

# # Setting the y-axis range from 0 to 100, for db only
# plt.ylim(0, 100)

# # Adding the values on the plot with a line
# for i, value in enumerate(wer_extended):
#     # Annotating the value with a line connecting it to the point
#     plt.annotate(f'{value:.1f}', 
#                  (time_values[i], wer_extended[i]), 
#                  textcoords="offset points", 
#                  xytext=(0, 30),  # Shift the text up by 10 points
#                  ha='center', 
#                  fontsize=8, 
#                  color='r',
#                  arrowprops=dict(arrowstyle='->', color='b', lw=1))

# # Saving the plot as an image
# plt.savefig(f'{volume_level}_wer_{mic_type}_{envi}_graph.png')
# plt.close()


#####################
'''
WER Values with SNR
'''
#####################

# import numpy as np
# import matplotlib.pyplot as plt

# mic_type = "TWS"
# envi = "flat_noise"
# volume_level = "60"

# db_values = [
#     54.1, 53.68, 54.17, 52.64, 52.33, 52.09, 54.18, 55.07, 54.39, 54.13, 53.97, 52.45, 53.82, 54.41, 53.3, 54.65, 55.19, 53.82, 53.6, 55.51, 53.43, 53.17, 55.58, 54.77, 52.36, 55.23, 54.81, 55.04, 52.25, 54.7, 55.14, 54.07, 54.24, 54.33, 53.19, 53.61, 54.31, 55.01, 53.29, 52.85, 52.98, 53.21, 53.11, 52.05, 53.47, 53.11, 53.27, 54.03, 55.63, 53.81, 54.23, 52.42, 55.66, 55.14, 53.1, 53.09, 54.21, 54.84, 52.6, 53.87, 55.38, 54.38, 54.6, 52.77, 52.58, 53.52, 52.82, 53.59, 53.16, 54.0, 53.84, 55.25, 54.17, 54.64, 55.03, 55.18, 53.69, 54.0, 55.14, 53.43, 55.3, 53.66, 53.7, 52.54, 53.13, 53.21, 54.01, 54.75, 55.34, 54.0, 54.56, 55.58, 54.4, 54.36, 54.94, 53.83, 53.36, 55.2, 55.27, 52.9, 53.33, 53.49, 55.63, 53.37, 53.99, 52.51, 53.86, 53.22, 52.93, 55.03, 52.16, 54.71, 53.69, 54.6, 53.31, 53.91, 53.94, 54.37, 54.91, 54.37, 55.46, 52.83, 54.39, 54.41, 53.61, 54.46, 52.75, 53.54, 54.83, 52.99, 52.24, 54.95, 53.95, 54.6, 53.41, 52.09, 52.14, 53.02, 54.21, 55.27, 53.53, 54.53, 54.08, 54.44, 54.12, 53.94, 52.42, 55.22, 54.87, 54.35, 54.51, 53.48, 52.12, 55.22, 54.68, 52.1, 52.02, 54.0, 54.06, 53.89, 53.06, 52.62, 54.43, 55.03, 53.79, 52.1, 54.72, 55.41, 53.09, 54.67, 54.81, 52.5, 53.56, 53.98, 53.36, 52.34, 54.52, 55.55, 54.5, 54.85, 52.84, 52.75, 52.06, 54.59, 53.37, 53.72, 53.11, 53.93, 53.18, 53.51, 54.37, 54.61, 54.11, 54.48, 54.17, 55.67, 55.05, 53.75, 53.15, 54.47, 54.21, 53.59, 54.67, 54.3, 55.04, 53.86, 54.78, 54.98, 54.31, 55.25, 52.48, 54.47, 55.51, 52.86, 53.74, 52.32, 55.45, 54.21, 53.24, 54.58, 55.37, 52.48, 53.88, 54.46, 54.6, 52.05, 52.3, 52.07, 54.72, 53.84, 54.05, 53.95, 53.55, 54.96, 53.83, 53.69, 55.11, 53.48, 53.35, 55.05, 52.65, 52.48, 53.83, 54.17, 52.01, 53.47, 53.35, 53.0, 55.05, 55.5, 54.51, 53.02, 53.21, 54.3, 54.6, 52.63, 52.51, 54.66, 55.02, 54.0, 54.9, 52.18, 55.17, 53.5, 54.68, 52.98, 55.53, 54.38, 53.56, 53.83, 54.78, 54.48, 53.33, 55.39, 53.96, 53.16, 54.72, 54.1, 54.44, 55.32, 55.22, 54.11, 54.4, 53.35, 54.24, 53.94, 52.35, 53.37, 55.25, 55.19, 53.74, 53.09, 52.32, 52.79, 53.58, 53.91, 53.67, 53.56, 54.17, 55.66,

#     61.62, 61.74, 61.28, 60.76, 60.84, 60.9, 64.29, 60.22, 60.21, 64.98, 61.98, 60.91, 61.64, 64.45, 62.82, 61.01, 60.29, 60.12, 61.55, 60.03, 64.47, 60.49, 64.33, 64.81, 61.79, 60.58, 61.37, 64.47, 60.82, 60.59, 62.97, 62.9, 60.38, 60.39, 60.33, 62.41, 60.98, 61.11, 61.75, 60.16, 61.91, 61.82, 61.68, 64.8, 61.06, 64.6, 61.72, 64.59, 61.5, 61.32, 62.73, 60.49, 61.45, 64.63, 60.22, 64.98, 64.95, 62.75, 61.72, 61.14, 61.99, 62.71, 64.13, 60.0, 60.1, 61.93, 60.29, 64.57, 61.88, 64.63, 60.12, 60.74, 60.08, 60.27, 61.71, 60.12, 60.35, 62.79, 61.98, 62.26, 64.92, 64.65, 60.11, 60.04, 60.22, 61.88, 61.0, 60.03, 60.89, 62.73, 64.5, 61.28, 61.11, 64.73, 60.52, 60.27, 61.6, 62.76, 61.52, 64.0, 60.73, 61.75, 61.55, 60.27, 60.15, 62.95, 61.2, 62.86, 62.81, 60.55, 60.65, 64.14, 60.24, 61.29, 61.48, 60.67, 64.65, 60.29, 61.01, 61.96, 60.5, 61.08, 61.51, 64.11, 64.94, 61.34, 61.16, 60.88, 62.47, 61.19, 60.4, 61.6, 60.09, 61.88, 61.79, 61.08, 60.24, 60.82, 64.4, 64.7, 61.1, 64.47, 60.5, 60.14, 64.03, 60.81, 60.53, 62.94, 61.71, 61.73, 62.71, 61.67, 60.04, 64.64, 62.79, 64.14, 64.6, 61.12, 61.85, 61.6, 60.4, 61.86, 61.4, 60.07, 60.36, 61.73, 62.06, 60.43, 64.72, 61.66, 62.91, 60.06, 64.37, 61.61, 61.05, 62.73, 61.67, 61.07, 64.64, 61.47, 64.66, 60.09, 60.68, 60.52, 60.59, 61.65, 60.56, 60.8, 61.25, 61.93, 61.81, 61.33, 61.92, 60.34, 61.26, 60.78, 62.76, 61.43, 64.98, 60.99, 64.81, 61.38, 62.95, 60.85, 61.4, 61.73, 60.55, 60.19, 61.32, 61.8, 61.22, 61.66, 60.38, 64.15, 62.77, 61.27, 60.15, 62.02, 61.08, 60.22, 60.27, 64.3, 60.98, 61.28, 64.18, 61.35, 60.36, 61.92, 61.75, 61.06, 61.89, 61.8, 60.11, 61.91, 61.69, 61.97, 61.8, 64.65, 64.25, 61.44, 64.71, 60.72, 60.74, 60.63, 61.92, 60.8, 61.98, 60.33, 61.81, 60.44, 64.63, 61.8, 60.08, 60.72, 64.56, 61.26, 64.81, 62.52, 60.31, 60.36, 61.72, 61.68, 60.24, 60.82, 62.16, 62.18, 60.6, 62.22, 61.93, 61.17, 60.06, 64.68, 61.34, 61.15, 60.17, 62.61, 64.65, 64.42, 61.03, 61.41, 61.88, 61.94, 60.67, 60.55, 64.18, 61.9, 60.42, 61.66, 61.65, 64.96, 61.37, 61.98, 61.69, 61.28, 64.02, 60.21, 61.16, 60.88, 60.47, 62.96,

#     68.95, 69.6, 69.83, 70.88, 70.1, 71.9, 71.22, 70.57, 69.06, 71.33, 70.13, 71.24, 70.86, 71.84, 72.16, 72.01, 69.31, 72.35, 72.0, 70.85, 70.34, 71.82, 70.23, 70.63, 71.65, 69.44, 70.11, 69.37, 70.31, 70.59, 69.23, 70.73, 71.14, 71.71, 71.65, 71.78, 71.67, 70.5, 68.84, 71.8, 70.21, 71.23, 71.16, 70.67, 71.04, 70.71, 69.9, 69.9, 70.57, 72.17, 71.37, 70.86, 69.66, 70.52, 72.06, 72.29, 69.45, 70.76, 70.67, 71.37, 71.97, 70.96, 70.51, 71.95, 69.54, 70.41, 69.13, 70.79, 71.11, 71.92, 72.06, 70.17, 68.9, 72.36, 72.43, 71.74, 71.14, 69.76, 71.66, 71.29, 69.27, 69.87, 70.64, 71.46, 71.17, 72.26, 70.37, 70.42, 69.44, 71.22, 70.68, 71.68, 71.92, 72.04, 71.9, 71.07, 69.15, 71.77, 71.1, 72.01, 71.77, 70.78, 71.97, 71.0, 71.97, 71.35, 70.44, 69.84, 71.79, 70.37, 69.5, 72.25, 72.05, 71.48, 71.19, 69.75, 72.14, 71.45, 71.23, 72.16, 72.06, 71.56, 70.16, 72.18, 71.79, 70.07, 69.34, 70.04, 70.45, 72.2, 71.7, 72.01, 72.39, 70.25, 69.72, 71.7, 72.21, 70.23, 69.82, 69.29, 70.22, 70.66, 71.04, 71.5, 71.5, 70.18, 68.96, 72.35, 71.16, 71.04, 69.77, 71.55, 71.75, 70.98, 71.47, 71.92, 71.15, 71.44, 71.3, 69.91, 69.97, 70.63, 71.44, 70.14, 72.13, 69.48, 70.04, 70.3, 71.14, 70.92, 72.05, 71.92, 72.24, 68.89, 69.73, 71.88, 72.36, 71.9, 71.93, 70.06, 71.71, 71.24, 70.78, 70.73, 70.44, 70.34, 72.26, 71.59, 70.11, 69.26, 67.41, 71.65, 69.89, 71.09, 72.14, 72.2, 71.66, 71.92, 71.03, 71.52, 70.83, 71.41, 71.44, 70.84, 72.46, 71.21, 70.33, 69.62, 70.91, 70.8, 71.62, 71.91, 72.16, 71.02, 68.9, 67.49, 70.66, 70.44, 71.86, 69.35, 69.94, 69.57, 72.09, 72.22, 70.89, 69.45, 72.06, 70.56, 71.36, 71.15, 72.38, 71.01, 71.42, 70.48, 71.43, 71.17, 71.24, 71.47, 71.22, 70.71, 71.51, 72.4, 70.54, 70.24, 69.31, 69.53, 71.23, 71.14, 70.8, 69.56, 70.62, 70.91, 71.11, 71.19, 72.07, 71.75, 71.52, 68.38, 72.41, 71.36, 70.13, 71.03, 72.01, 70.45, 71.32, 71.98, 69.64, 70.95, 69.76, 72.05, 71.73, 71.23, 70.0, 70.13, 71.93, 71.21, 72.41, 71.01, 72.39, 71.44, 71.24, 68.94, 71.43, 71.14, 70.33, 71.35, 70.47, 72.12, 69.72, 70.34, 69.47, 71.8, 70.93, 71.49, 71.11, 72.04, 71.14, 71.21, 71.08, 72.02,

#     75.85, 75.61, 74.99, 75.3, 75.85, 75.63, 75.3, 75.47, 74.61, 74.94, 75.0, 76.01, 75.31, 74.68, 75.32, 75.26, 73.76, 74.65, 74.36, 75.74, 74.16, 74.41, 73.96, 75.73, 74.84, 74.45, 74.78, 75.72, 75.31, 75.19, 75.98, 74.12, 73.97, 73.9, 73.85, 75.03, 75.13, 75.64, 74.72, 75.89, 75.52, 74.87, 75.41, 75.63, 74.42, 75.25, 75.87, 74.13, 75.26, 74.97, 76.31, 73.88, 74.87, 73.6, 75.59, 73.84, 74.32, 75.46, 74.46, 75.3, 73.96, 74.06, 74.55, 74.65, 75.62, 75.04, 75.23, 75.98, 74.13, 73.46, 76.15, 75.61, 75.01, 75.53, 74.98, 75.2, 75.06, 75.28, 75.56, 75.63, 74.19, 74.73, 75.95, 74.76, 74.07, 74.09, 74.57, 74.37, 76.23, 75.78, 74.77, 74.81, 75.63, 74.0, 73.96, 74.18, 75.48, 74.48, 75.95, 75.56, 75.39, 76.03, 74.57, 73.02, 75.72, 76.19, 74.62, 75.54, 74.59, 75.42, 75.66, 74.43, 75.07, 75.63, 74.88, 75.13, 74.51, 76.91, 73.7, 74.19, 74.18, 75.37, 74.83, 74.9, 75.03, 75.72, 74.56, 76.09, 75.59, 75.48, 75.95, 73.96, 74.91, 75.15, 75.43, 76.24, 74.75, 74.45, 75.03, 76.13, 74.53, 74.03, 75.83, 74.67, 75.89, 74.29, 74.2, 75.54, 74.16, 75.51, 75.45, 75.83, 76.03, 74.18, 75.95, 75.47, 74.98, 75.7, 75.27, 75.15, 74.78, 74.64, 76.58, 74.51, 74.69, 74.62, 76.01, 74.48, 74.23, 74.25, 74.36, 74.62, 75.44, 75.2, 75.27, 75.21, 74.7, 75.49, 76.04, 75.42, 75.24, 75.45, 75.19, 74.12, 74.62, 74.84, 75.34, 75.51, 75.06, 75.37, 75.72, 73.08, 74.45, 75.56, 75.7, 74.35, 75.02, 74.92, 75.75, 74.64, 75.59, 75.95, 75.55, 76.26, 75.39, 74.92, 74.56, 76.73, 75.27, 75.25, 74.32, 75.87, 73.56, 75.08, 74.34, 76.02, 74.65, 74.31, 74.15, 75.93, 74.27, 75.12, 74.86, 75.78, 75.44, 75.85, 75.6, 76.28, 74.38, 74.19, 74.56, 74.28, 75.58, 75.03, 75.58, 74.75, 75.78, 75.2, 74.77, 76.66, 74.89, 75.22, 75.19, 76.35, 75.64, 73.8, 75.32, 76.11, 74.61, 74.09, 75.76, 74.93, 74.51, 74.61, 75.81, 75.42, 75.67, 74.8, 76.29, 73.67, 74.44, 73.85, 75.48, 74.81, 75.67, 75.45, 76.12, 75.12, 75.02, 76.59, 75.06, 74.9, 75.74, 75.61, 75.24, 73.99, 75.77, 77.05, 74.43, 74.77, 73.72, 75.37, 73.45, 76.56, 74.63, 74.94, 74.21, 75.98, 74.33, 73.97, 74.09, 74.99, 74.96, 75.37, 75.08, 75.41, 75.18, 74.97, 75.42, 75.52,

#     80.23, 80.0, 79.01, 79.67, 79.49, 80.24, 78.86, 80.09, 80.29, 79.68, 79.92, 79.23, 79.21, 79.81, 79.53, 79.79, 79.89, 79.78, 79.22, 79.22, 79.79, 79.74, 80.02, 78.89, 79.37, 80.09, 80.14, 79.5, 80.54, 79.99, 80.19, 79.14, 79.84, 79.37, 79.02, 79.76, 79.57, 79.69, 79.9, 79.97, 79.3, 79.78, 79.53, 79.85, 79.69, 79.44, 80.38, 79.38, 79.64, 79.81, 81.0, 80.11, 80.05, 80.05, 79.22, 80.44, 79.52, 79.13, 79.19, 79.44, 79.12, 79.94, 79.59, 79.41, 79.96, 80.27, 79.57, 79.3, 79.61, 78.86, 78.94, 80.47, 79.53, 78.78, 79.54, 79.57, 79.9, 79.11, 79.97, 79.49, 79.52, 78.75, 79.42, 79.75, 79.66, 80.14, 78.69, 78.85, 79.87, 79.69, 79.59, 78.76, 80.53, 79.0, 79.33, 80.29, 79.73, 80.02, 80.06, 78.71, 80.76, 79.03, 79.82, 79.77, 78.98, 79.75, 79.75, 79.79, 79.71, 79.99, 79.18, 78.67, 79.95, 79.04, 79.61, 78.79, 80.14, 79.69, 80.05, 78.93, 79.67, 80.01, 79.9, 79.3, 80.48, 79.15, 79.97, 79.69, 80.71, 80.52, 79.53, 80.22, 79.69, 79.29, 79.63, 80.18, 78.67, 79.51, 80.58, 79.68, 79.87, 79.51, 79.58, 79.02, 79.77, 79.75, 80.01, 80.3, 79.03, 79.18, 79.72, 78.94, 78.89, 79.78, 80.03, 79.26, 79.72, 80.65, 80.96, 80.09, 78.99, 79.73, 79.91, 79.69, 79.56, 78.92, 79.57, 80.33, 79.45, 80.59, 80.25, 79.19, 80.22, 79.52, 79.5, 80.16, 80.74, 79.11, 79.44, 80.44, 80.52, 78.78, 79.6, 80.44, 79.56, 79.68, 79.36, 80.71, 79.81, 79.42, 79.22, 79.32, 80.04, 79.64, 80.02, 79.46, 79.11, 79.07, 79.74, 80.25, 80.11, 80.38, 79.94, 79.91, 78.8, 79.32, 80.19, 79.79, 79.76, 80.47, 79.23, 80.08, 79.42, 78.93, 79.98, 79.78, 80.43, 79.37, 78.96, 79.74, 79.54, 79.91, 80.17, 81.12, 79.38, 80.02, 79.43, 80.9, 79.99, 79.84, 80.14, 78.92, 79.64, 79.93, 80.14, 78.75, 79.26, 79.38, 79.7, 78.96, 79.02, 79.47, 79.56, 79.79, 80.61, 79.26, 79.24, 79.1, 80.17, 78.89, 79.58, 79.78, 79.81, 79.66, 80.24, 79.78, 80.15, 79.88, 79.33, 79.87, 79.06, 79.62, 79.72, 80.52, 79.07, 79.87, 78.78, 79.81, 80.61, 79.31, 79.44, 78.81, 79.63, 79.21, 79.19, 79.05, 79.61, 78.9, 79.51, 79.95, 80.09, 79.93, 79.57, 79.65, 79.51, 80.13, 79.88, 79.74, 79.41, 78.96, 80.7, 79.15, 80.32, 79.43, 80.62, 80.19, 79.32, 79.33, 80.18, 78.76
# ]

# wer_values = [14.702154626109, 17.61723700887199, 19.39163498098859, 21.926489226869457, 24.714828897338403]
# snr_values = [65.06949001008721, 67.51709820937212, 61.36723670230487, 61.250234083887925, 64.43734105118072]

# # Extend WER values to match db_values length
# wer_extended = []
# for value in wer_values:
#     wer_extended.extend([value] * (len(db_values) // len(wer_values)))

# time_values = list(range(len(db_values)))  # x-axis in seconds
# plt.figure(figsize=(10, 6))

# # Plot WER values
# plt.plot(time_values, wer_extended, marker='x', linestyle='--', color='r', label='WER Values')

# # Add SNR markers in the middle of the WER line segments
# for i, (time, wer, snr) in enumerate(zip(time_values[::len(time_values) // len(wer_values)], wer_values, snr_values)):
#     plt.scatter(time, wer, color='blue', label='SNR Value' if i == 0 else "", zorder=3)  # Add a dot or 'x' for SNR
#     plt.text(time, wer, f'{snr:.2f} dB', fontsize=9, color='blue', ha='right', va='bottom')

# # Adding titles and labels
# plt.title(f'WER/SNR - Noisy - {mic_type} Mic - {envi} - Level {volume_level}%')
# plt.xlabel('Time (seconds)')
# plt.ylabel('WER in %')
# plt.legend()

# # Saving the plot as an image
# plt.savefig(f'{volume_level}_wer_snr_{mic_type}_{envi}_graph.png')
# plt.close()



##############
'''
WER NEW
'''
##############

import matplotlib.pyplot as plt
import numpy as np

mic_type = "TWS"
envi = "Noisy"
volume_level = "60"

MIC = mic_type.lower()

is_wer = True

if is_wer:
    FILEPATH_PNG = f'data_log/audacity/new_self-talk/{MIC}/WER.png'
else:
    FILEPATH_PNG = f'data_log/audacity/new_self-talk/{MIC}/SNR.png'


# Data
if is_wer:
    # # built-in
    # wer_values = [0.82, 2.30, 2.78, 4.84, 99.24]

    # # meeting
    # wer_values = [2.96, 4.78, 10.04, 46.45, 99.24]

    # # podcast
    # wer_values = [2.96, 3.06, 5.35, 11.57, 86.42]

    # tws
    wer_values = [7.27, 13.68, 26.22, 27.44, 100]
else:
    # # built-in
    # snr_values = [15.40, 9.03, 2.45, 0.56, -4.93]

    # # meeting
    # snr_values = [18.02, 6.28, 2.93, -3.26, -5.44]

    # # podcast
    # snr_values = [12.77, 4.89, -0.31, -4.74, -8.53]

    # tws
    snr_values = [28.90, 12.07, 6.52, 5.33, -1.61]

# Adjust timeline to start at 300 for the first value
timeline = np.arange(300, 1500 + 1, 300)  # Start from 300, up to 1500 seconds, in 300-second intervals

# Create plot
plt.figure(figsize=(10, 6))
if is_wer:
    plt.plot(timeline, wer_values, color='red', marker='o', label='WER')
else:
    plt.plot(timeline, snr_values, color='blue', marker='o', label='SNR')

# Add annotations
if is_wer:
    for i, wer in enumerate(wer_values):
        plt.annotate(f'{wer:.2f}%', (timeline[i], wer), textcoords="offset points", xytext=(0, 5), ha='center', color='blue')
else:
    for i, wer in enumerate(snr_values):
        plt.annotate(f'{wer:.2f} dB', (timeline[i], wer), textcoords="offset points", xytext=(0, 5), ha='center', color='red')

# Customize plot
if is_wer:
    plt.title(f'Word Error Rate (WER) Volume Level {volume_level} {mic_type}')
else:
    plt.title(f'Signal to Noise Ratio (SNR) Volume Level {volume_level} {mic_type}')

plt.xlabel('Time (seconds)')

if is_wer:
    plt.ylabel('WER (%)')
else:
    plt.ylabel('SNR (dB)')

plt.ylim(-10, 100)
plt.grid(True)
plt.legend()

# # Show plot
# plt.show()

plt.savefig(FILEPATH_PNG)

plt.close()